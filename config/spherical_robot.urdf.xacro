<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="robot">

    <!-- This will include all the contents of example_include.xacro first. Go check it out! -->
    <xacro:include filename="example_include.xacro" />

    <!-- Load spherical robot geometric parameters: -->
    <xacro:arg name="r_b" default="1.0" />
    <xacro:arg name="ratio_c_b" default="1.0" />
    <xacro:arg name="ratio_e_b" default="1.0" />
    <!-- Convert them into xacro properties: -->
    <xacro:property name="r_b" value="$(arg r_b)" />
    <xacro:property name="ratio_c_b" value="$(arg ratio_c_b)" />
    <xacro:property name="ratio_e_b" value="$(arg ratio_e_b)" />
    <xacro:property name="r_c" value="$(eval ratio_c_b * r_b)"/>
    <xacro:property name="r_e" value="$(eval ratio_e_b * r_b)"/>
    

    <!-- world -->
    <link name="world"></link>


    <!-- base -->
    <link name="srb_base">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/base_plate.stl" 
                      scale="${r_b} 
                             ${r_b} 
                             ${r_b}"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- world to base -->
    <joint name="joint_world_base" type="fixed">
        <parent link="world"/>
        <child link="srb_base"/>   
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- rot_cen -->
    <link name="srb_rot_cen"></link>

    <!-- base to rot_cen -->
    <joint name="joint_base_rot_cen" type="fixed">
        <parent link="srb_base"/>
        <child link="srb_rot_cen"/>   
        <origin xyz="0 0 ${r_c}" rpy="0 0 0"/>
    </joint>


    <!-- motor_0 -->
    <link name="srb_motor_0">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/arc_link_thin.stl" 
                    scale="${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) }"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to motor_0 -->
    <joint name="joint_rot_cen_motor_0" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_motor_0"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- motor_1 -->
    <link name="srb_motor_1">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/arc_link_thin.stl" 
                    scale="${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) }"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to motor_1 -->
    <joint name="joint_rot_cen_motor_1" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_motor_1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- motor_2 -->
    <link name="srb_motor_2">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/arc_link_thin.stl" 
                    scale="${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) }"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to motor_2 -->
    <joint name="joint_rot_cen_motor_2" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_motor_2"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- elbow_0 -->
    <link name="srb_elbow_0">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/arc_link_thin.stl" 
                    scale="${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) }"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to elbow_0 -->
    <joint name="joint_rot_cen_elbow_0" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_elbow_0"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- elbow_1 -->
    <link name="srb_elbow_1">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/arc_link_thin.stl" 
                    scale="${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) }"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to elbow_1 -->
    <joint name="joint_rot_cen_elbow_1" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_elbow_1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- elbow_2 -->
    <link name="srb_elbow_2">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/arc_link_thin.stl" 
                    scale="${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) } 
                           ${ sqrt(r_b * r_b  + r_c * r_c) }"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to elbow_2 -->
    <joint name="joint_rot_cen_elbow_2" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_elbow_2"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- epl_c -->
    <link name="srb_epl_c">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://cga_ik/meshes/end_plate.stl" 
                      scale="${r_e} 
                             ${r_e} 
                             ${r_e}"/>
            </geometry>
            <material name="white" />
        </visual>
    </link>

    <!-- rot_cen to epl_c -->
    <joint name="joint_rot_cen_epl_c" type="floating">
        <parent link="srb_rot_cen"/>
        <child link="srb_epl_c"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>
    

</robot>
